stages:
  - build
  - test
  - deploy

variables:
  SSH_PORT: "226"
  SSH_USER: "dev"
  SSH_HOST: "103.178.67.56"
  DEPLOY_PATH: "/home/dev/test/"
  SSH_KEY: "$SSH_PRIVATE_KEY"

default:
  tags:
  - local
  before_script:
    - pwd
    - echo $USER
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_KEY" | base64 --decode | ssh-add - > /dev/null
    - if [[ ! -d ~/.ssh ]]; then mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "StrictHostKeyChecking no" > ~/.ssh/config

build:
  stage: build
  script:
    - echo "Building the application..."
    - ls -la
    # Add your build commands here, for example:
    # - docker build -t your-image-name .

test:
  stage: test
  script:
    - echo "Running tests..."
    # Add your test commands here, for example:
    - ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo 'Testing SSH connection'; exit"

deploy:
  stage: deploy
  script:
    - echo "Deploying to server..."
    - |
      ssh $SSH_USER@$SSH_HOST -p $SSH_PORT << 'EOF'
      set -e
      ls -la
      mkdir -p "$DEPLOY_PATH"
      cd "$DEPLOY_PATH"
      git clone "$CI_PROJECT_URL"
      ls -la
      EOF
